<!-- .listing { border: 1px dashed #999999; background-color: #EEEEEE; line-height:13px; font-size: 9px } -->
<refentry id="{@id}">
    <refnamediv>
        <refname>Admin_DA</refname>
        <refpurpose>Old Documentation from the Admin_DA Tutorial</refpurpose>
    </refnamediv>

    <refsect1 id="{@id changes}">
        <title>What's changed?</title>
        <para>
        The following 'treatment' has been applied to the previous data access code.
            <itemizedlist>
              <listitem>consolidated all DA methods into one file
              </listitem>
              <listitem>consolidated instances of Max_getFoo() and Max_getEntities('foo')
              </listitem>
              <listitem>converted to PEAR coding standards, commented code
              </listitem>
              <listitem>converted code from procedural to OO
              </listitem>
              <listitem>reduced redundant code
              </listitem>
              <listitem>organised code into logical groups
                  <itemizedlist>
                      <listitem>SqlBuilder: relational/constraints methods
                      </listitem>
                      <listitem>SqlBuilder: sql methods
                      </listitem>
                      <listitem>Admin_DA: entity methods
                      </listitem>
                      <listitem>Admin_DA: helper methods
                      </listitem>
                      <listitem>Admin_DA: public DA methods
                      </listitem>
                      <listitem>Admin_DA: public stats methods
                      </listitem>
                  </itemizedlist>
              </listitem>
              <listitem>organised method visibility
              </listitem>
              <listitem>wrote tests for all methods including transaction rollbacks, customised PEAR MySQL driver
              </listitem>
              <listitem>searched and replaced old MAX_doSomething() calls with Admin_DA::doSomething()
              </listitem>
            </itemizedlist>
        </para>
    </refsect1>

    <refsect1 id="{@id structure}">
        <title>Call Structure</title>
        <para>The new Data Access layer takes the approach that all entity handling should be done internally,
              ie, as private methods, and that the data API should expose user-friendly, intuitively named
              method.  Therefore a call to get a collection of agencies now looks like this:

              <emphasis>Admin_DA::getAgencies($aParams, $allFields = false)</emphasis>

              The new call structure can be summarised as follows:
            <itemizedlist>
                <listitem>Admin_DA::deleteFoo() // public call
                    <itemizedlist>
                        <listitem>Admin_DA::_deleteEntities() // internal logic, SqlBuilder process
                            <itemizedlist>
                                <listitem>Admin_DA::_delete() //  wrapper for a delete row with PEAR::DB
                                </listitem>
                            </itemizedlist>
                        </listitem>
                    </itemizedlist>
                </listitem>
            </itemizedlist>
        </para>
    </refsect1>

    <refsect1 id="{@id usage}">
        <title>Usage</title>
        <para>
            The data access layer exposes three types of data calls which can be explained as follows:
            <itemizedlist>
              <listitem>single entity calls: <emphasis>Admin_DA::getPlacement($placementId)</emphasis>
                <para>
                This code will return an entity of type <emphasis>placement</emphasis>, the return type
                is a hash of key/value pairs with the following structure:
                    <programlisting>
                        Array
                        (
                            [advertiser_id] => 123
                            [placement_id] => 1
                            [name] => mycampaign
                            [active] => t
                            [views] => -1
                            [clicks] => -1
                            [conversions] => -1
                            [expire] => 2005-11-01
                            [activate] => 0000-00-00
                            [priority] => l
                            [weight] => 1
                            [target] => 0
                            [optimise] => f
                            [anonymous] => f
                        )
                    </programlisting>
                </para>
              </listitem>
              <listitem>collection calls: <emphasis>Admin_DA::getZones($aParams, $allFields = false)</emphasis>
                <para>
                This code will return a collection of entities of type <emphasis>zone</emphasis>, the return type
                is an indexed hash of key/value pairs  where the key is the entity id:
                    <programlisting>
                        Array
                        (
                            [80] => Array
                                (
                                    [zone_id] => 80
                                    [publisher_id] => 508
                                    [name] => toufreacli
                                    [type] => 3
                                )

                        )
                    </programlisting>
                </para>
              </listitem>
              <listitem>stats calls: <emphasis>Admin_DA::getPlacementsStats(array('advertiser_id' => 1))</emphasis>
                <para>
                This code will return a collection of stats, the return type
                is a hash of key/value pairs that always contains request, view, click and conversion info:
                    <programlisting>
                        Array
                        (
                            [advertiser_id] => 1
                            [placement_id] => 1
                            [name] => test  campaign
                            [active] => t
                            [num_children] => 1
                            [sum_requests] => 13009
                            [sum_views] => 9439
                            [sum_clicks] => 14123
                            [sum_conversions] => 11575
                        )
                    </programlisting>
                </para>
              </listitem>
            </itemizedlist>
        </para>
    </refsect1>

    <refsect1 id="{@id caching}">
        <title>Caching and Performance</title>
        <para>
            Given the nature of the number of layers used to return a dataset (entities, SqlBuilder, PEAR::DB),
            developers are encouraged to use caching whereever possible to improve performance.  To make any
            data access call from cache, simply wrap the method in a fromCache() call.  Ie,
            <emphasis>$ret = Admin_DA::fromCache('getPlacementsStats', array('advertiser_id' => 1))</emphasis>
        </para>
    </refsect1>

    <refsect1 id="{@id outstanding}">
        <title>What's Outstanding</title>
        <para>
            There are still a number of calls to phpAds_dbQuery() which need to be replaced with data access calls.
            Also, data calls from the delivery engine do not use the DAL in order to obtain the best possible
            performance, ie, in the case of mysql, they use PHP's raw mysql_* functions.  In the near future we
            hope that the introduction of a DAL will make support for a range of database vendors easier.  It is
            anticipated that each port will will use native db calls in their respective delivery code.
            <itemizedlist>
              <listitem>remove MAX_PATH . '/lib/max/other/db_proc.php'
              </listitem>
              <listitem>remove MAX_PATH . '/lib/max/other/dba.php'
              </listitem>
              <listitem>remove MAX_PATH . '/lib/max/other/lib-db.inc.php'
              </listitem>
              <listitem>rename placement_tracker to placement_tracker_assoc
              </listitem>
            </itemizedlist>
        </para>
    </refsect1>
</refentry>