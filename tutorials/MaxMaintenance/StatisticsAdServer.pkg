<refentry id="{@id}">
 <refnamediv>
  <refname>Maintenance Statistics: AdServer</refname>
  <refpurpose>Describes how the Maintenance Statistics Engine works for the
  AdServer Module</refpurpose>
 </refnamediv>
 <para>
  The purpose of the Maintenance Statistics Engine (MSE) is to summarise the
  request, impression, click and connection data that are stored in the
  raw database tables into the intermediate and summary tables.
 </para>
 <para>
  The intermediate tables store the complete details of all connections
  (including conversions), and an operation interval/day/hour based breakdown
  of the ad impressions, clicks and conversions.
 </para>
 <para>
  The summary table "data_summary_ad_hourly" contains a day/hour based
  breakdown of the impressions, clicks and conversions. The summary table
  "data_summary_zone_impression_history" contains an operation interval
  based history of the actual ad impressions for each zone in Openads.
 </para>
 <para>
  The MSE process for the AdServer module is carried out via the following steps:
  <orderedlist>
   <listitem>{@tutorial StatisticsAdServer.pkg#create}.</listitem>
   <listitem>{@tutorial StatisticsAdServer.pkg#sir}.</listitem>
   <listitem>{@tutorial StatisticsAdServer.pkg#sicci}.</listitem>
   <listitem>{@tutorial StatisticsAdServer.pkg#siccf}.</listitem>
   <listitem>{@tutorial StatisticsAdServer.pkg#mp}.</listitem>
   <listitem>{@tutorial StatisticsAdServer.pkg#dod}.</listitem>
   <listitem>{@tutorial StatisticsAdServer.pkg#lc}.</listitem>
  </orderedlist>
 </para>
 <para>
  Each of these steps is outlined in more detail below.
 </para>
 <refsect1 id="{@id create}">
  <title>Creation of a MAX_Maintenance_Statistics_AdServer class object</title>
  <para>
   The {@link MAX_Maintenance_Statistics::run()} method is used to iterate over all
   of the installed modules in the system, and when the AdServer module is installed,
   it creates an instance of the {@link MAX_Maintenance_Statistics_AdServer} class,
   which in turn creates all of the required tasks (see {@link MAX_Core_Task}) below,
   and stores them in a {@link MAX_Core_Task_Runner}.
  </para>
  <para>
   The {@link MAX_Maintenance_Statistics_AdServer::updateStatistics()} method is then
   used to run the tasks, in order, as listed below.
  </para>
 </refsect1>
 <refsect1 id="{@id sir}">
  <title>Setting the Update Requirements</title>
  <para>
   Carried out via the {@link MAX_Maintenance_Statistics_AdServer_Task_SetUpdateRequirements} class.
  </para>
  <para>
   A check is made of the current time against the details of the most recent Maintenance
   Statistics Engine run for the AdServer module (stored in the "log_maintenance_statistics"
   table) to determine if there is a need to update the intermediate data, and the summary data
   stored in the "data_summary_ad_hourly table" (that is, one hour has passed since the last update),
   or if there is a need to update the intermediate data, and the summary data stored in the
   "data_summary_zone_impression_history table" (that is, one operation interval has passed since
   the last update).
  </para>
  <para>
   The details of these tests are then stored in the
   {@link MAX_Maintenance_Statistics_AdServer_Task_SetUpdateRequirements} class'
   {@link MAX_Maintenance_Statistics_Common_Task::$oController} object.
  </para>
 </refsect1>
 <refsect1 id="{@id sicci}">
  <title>Summarising the Requests, Impressions, Clicks and Connections (Intermediate)</title>
  <para>
   Carried out via the {@link MAX_Maintenance_Statistics_AdServer_Task_SummariseIntermediate} class.
  </para>
  <para>
   If either summary table needs updating, any connections between ad impressions or clicks
   and tracker impressions are found, and the details inserted into the
   "data_intermediate_ad_connection" and "data_intermediate_ad_variable_value" tables. The
   raw impression, click and conversion data is also summarised into the "data_intermediate_ad"
   intermediate table.
  </para>
  <para>
   At present, only the data in the "data_intermediate_ad" table are used, however,
   the data in the "data_intermediate_ad_connection" and "data_intermediate_ad_variable_value"
   tables may be used for displaying more detailed information about connections at a
   later date.
  </para>
 </refsect1>
 <refsect1 id="{@id siccf}">
  <title>Summarising the Requests, Impressions, Clicks and Connections (Final)</title>
  <para>
   Carried out via the {@link MAX_Maintenance_Statistics_AdServer_Task_SummariseFinal} class.
  </para>
  <para>
   If required, the "data_summary_ad_hourly" table is updated from the data
   in the "data_intermediate_ad" table. Similarly, the
   "data_summary_zone_impression_history" table is updated if required.
  </para>
 </refsect1>
 <refsect1 id="{@id mp}">
  <title>Managing Placements</title>
  <para>
   Carried out via the {@link MAX_Maintenance_Statistics_AdServer_Task_ManagePlacements} class.
  </para>
  <para>
   Once the impression, click and conversion data are summarised, the Statistics Engine
   goes through all the placements, and:
   <orderedlist>
    <listitem>Enables any placement that is now past its start date/time;</listitem>
    <listitem>Disables any placement that is now past its end date/time;</listitem>
    <listitem>Decrements any impression, click and/or conversion inventory
    requirements for the placement in the "placements" table; and</listitem>
    <listitem>Disables any placement that has now reached its inventory
    requirements.</listitem>
   </orderedlist>
  </para>
 </refsect1>
 <refsect1 id="{@id dod}">
  <title>Deleting Summarised Raw Data</title>
  <para>
   Carried out via the {@link MAX_Maintenance_Statistics_AdServer_Task_DeleteOldData} class.
  </para>
  <para>
   If the option for deleting raw statistics after summarising is enabled, then any
   "old" ad requests, impressions, and/or clicks are deleted (or, if split
   table mode is also enabled, then any "old" raw ad data tables no longer required
   are dropped). This process takes into account any connection windows as well as the
   "Grace Period" to determine if old data that <emphasis>has</emphasis> already been
   summarised should still be kept (i.e. not deleted).
  </para>
 </refsect1>
 <refsect1 id="{@id lc}">
  <title>Logging the Completion of the MSE (AdServer) Process</title>
  <para>
   Carried out via the {@link MAX_Maintenance_Statistics_AdServer_Task_LogCompletion} class.
  </para>
  <para>
   The completion of the MSE AdServer tasks is logged to the
   "log_maintenance_statistics" table so that the next time the engine is run, the
   required actions can be determined.
  </para>
  <para>
   A report of the process is also logged to the "userlog" table.
  </para>
 </refsect1>
</refentry>
